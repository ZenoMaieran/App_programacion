/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package InterfazVisual;

import Backend_Logica_Reservas.Reserva;
import Backend_Logica_Reservas.GestorArchivosReservas;
import Backend_Logica_Eventos.Evento;
import Backend_Logica_Clientes.Cliente;
import Backend_Logica.GestionDatos;
import Backend_Logica_Eventos.GestorArchivosEventos;
import Backend_Logica_Clientes.GestorArchivosClientes;


import java.awt.BorderLayout;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class AdminReservasFrame extends javax.swing.JFrame {

    private final ArrayList<Reserva> reservas;
    private final DefaultTableModel modelo;
    private final ArrayList<Cliente> listaClientes;

    {
        ArrayList<Cliente> temp;
        try {
            temp = GestorArchivosClientes.cargarClientes();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
            temp = new ArrayList<>();
        }
        listaClientes = temp;
    }

    private final ArrayList<Evento> listaEventos = GestorArchivosEventos.cargarEventos();

    

    public AdminReservasFrame() {
        reservas = GestorArchivosReservas.cargarReservas();
        modelo = new DefaultTableModel(new Object[]{"Cliente", "Evento", "Fecha", "Precio (€)"}, 0);
        initComponents();
        tablaReservas.setModel(modelo);
        llenarTabla(reservas);

    }

    private void llenarTabla(Iterable<Reserva> lista) {
        modelo.setRowCount(0);
        DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");

        for (Reserva r : lista) {
            modelo.addRow(new Object[]{
                r.getCliente().getNombre(),
                r.getEvento().getTitulo(),
                r.getFechaReserva().format(fmt),
                String.format("%.2f", r.getPrecioFinal())
            });
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaReservas = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtEvento = new javax.swing.JTextField();
        Buscar = new javax.swing.JButton();
        limpiarFiltros = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaReservas);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar);

        jLabel1.setText("Cliente:");
        jPanel2.add(jLabel1);

        txtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteActionPerformed(evt);
            }
        });
        jPanel2.add(txtCliente);

        jLabel2.setText("Evento:");
        jPanel2.add(jLabel2);
        jPanel2.add(txtEvento);

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });
        jPanel2.add(Buscar);

        limpiarFiltros.setText("Limpiar Filtros");
        limpiarFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarFiltrosActionPerformed(evt);
            }
        });
        jPanel2.add(limpiarFiltros);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(62, 62, 62)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        String clienteFiltro = txtCliente.getText().trim().toLowerCase();
        String eventoFiltro  = txtEvento.getText().trim().toLowerCase();

        ArrayList<Reserva> filtradas = new ArrayList<>();
        for (Reserva r : reservas) {
            boolean okCli = clienteFiltro.isEmpty() ||
                    r.getCliente().getNombre().toLowerCase().contains(clienteFiltro);
            boolean okEv  = eventoFiltro.isEmpty() ||
                    r.getEvento().getTitulo().toLowerCase().contains(eventoFiltro);
            if (okCli && okEv) filtradas.add(r);
        }
        llenarTabla(filtradas);

        if (modelo.getRowCount() == 0)
            JOptionPane.showMessageDialog(this, "No se encontraron reservas con esos filtros.");
    }//GEN-LAST:event_BuscarActionPerformed

    private void limpiarFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarFiltrosActionPerformed
        txtCliente.setText("");
        txtEvento.setText("");
        llenarTabla(reservas);
    }//GEN-LAST:event_limpiarFiltrosActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int fila = tablaReservas.getSelectedRow();  // <-- obtenemos la fila seleccionada
        if (fila >= 0) {
            Reserva seleccionada = reservas.get(fila);  // <-- obtenemos la reserva
            CrearReservaFrame editar = new CrearReservaFrame(modelo, reservas,
                                                             listaClientes, listaEventos,
                                                             seleccionada, fila);
            editar.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una reserva para editar.");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int fila = tablaReservas.getSelectedRow();
        if (fila >= 0) {
            int confirm = JOptionPane.showConfirmDialog(
                    this, "¿Eliminar la reserva seleccionada?",
                    "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                reservas.remove(fila);
                modelo.removeRow(fila);
                GestorArchivosReservas.guardarReservas(reservas);
                JOptionPane.showMessageDialog(this, "Reserva eliminada.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una reserva para eliminar.");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminReservasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminReservasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminReservasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminReservasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminReservasFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpiarFiltros;
    private javax.swing.JTable tablaReservas;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtEvento;
    // End of variables declaration//GEN-END:variables
}
