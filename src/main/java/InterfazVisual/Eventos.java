/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package InterfazVisual;

import Backend_Logica.GestionDatos;
import Backend_Logica_Eventos.Evento;
import Backend_Logica_Eventos.GestorArchivosEventos;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.ListIterator;
import javax.swing.JOptionPane;
import Backend_Logica.Direccion;
import static Backend_Logica.Direccion.parsearDireccion;
import InterfazVisual.PaginaCompra;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JFrame;

/**
 *
 * @author anton
 */
public class Eventos extends javax.swing.JFrame {

    /**
     * Creates new form Eventos
     */
    private ArrayList<Evento> eventos;
    private int indiceEventoActual = 0;
    private GestionDatos gestor;
    private JFrame paginaBase;
    private Evento eventoActual;
    private ArrayList<Evento> listaEventosFiltrados;

    public Eventos(GestionDatos gestor, JFrame base) {
        initComponents();
        this.gestor = gestor;
        this.paginaBase = base;
        this.setLocationRelativeTo(null);
        this.eventos = gestor.getListaEventos();

        if (eventos != null && !eventos.isEmpty()) {
            indiceEventoActual = 0;
            eventoActual = eventos.get(indiceEventoActual);
            panelDatosEventos.mostrarEvento(eventoActual);
        }

    }

    private Eventos() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDatosEventos1 = new InterfazVisual.PanelDatosEventos();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        siguiente = new javax.swing.JButton();
        anterior = new javax.swing.JButton();
        panelDatosEventos = new InterfazVisual.PanelDatosEventos();
        jLabel3 = new javax.swing.JLabel();
        txtCiudad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        comboTipo = new javax.swing.JComboBox<>();
        anteriorConFiltro = new javax.swing.JToggleButton();
        siguienteConFiltro = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Eventos Disponibles");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("EVENTOS DISPONIBLES:");
        jLabel1.setAlignmentX(0.5F);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("FILTROS:");
        jLabel2.setAlignmentX(0.5F);

        jButton1.setBackground(new java.awt.Color(51, 204, 255));
        jButton1.setText("FILTRAR");
        jButton1.setAlignmentX(0.5F);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("COMPRAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        siguiente.setText("SIGUIENTE");
        siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteActionPerformed(evt);
            }
        });

        anterior.setText("ANTERIOR");
        anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Ciudad:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Tipo: ");

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Concierto", "Deporte", "Musical", "Teatro" }));

        anteriorConFiltro.setText("Anterior con Filtro");
        anteriorConFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorConFiltroActionPerformed(evt);
            }
        });

        siguienteConFiltro.setText("Siguiente con Filtro");
        siguienteConFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteConFiltroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(344, 344, 344))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(panelDatosEventos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(anteriorConFiltro)
                                .addGap(70, 70, 70)
                                .addComponent(siguienteConFiltro))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(136, 136, 136)
                                .addComponent(jButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(anterior, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)
                        .addComponent(siguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(panelDatosEventos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(anterior)
                            .addComponent(siguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel2)
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(anteriorConFiltro)
                            .addComponent(siguienteConFiltro))
                        .addGap(29, 29, 29)
                        .addComponent(jButton1)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            String titulo = panelDatosEventos.getTitulo().getText();
            String tipo = panelDatosEventos.getTipo().getText();
            String txtDireccion = panelDatosEventos.getDireccion().getText();
            Direccion direccion = parsearDireccion(txtDireccion);
            String textoFecha = panelDatosEventos.getFecha().getText();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm");
            LocalDateTime fecha = LocalDateTime.parse(textoFecha, formatter);
            int calificacion = Integer.parseInt(panelDatosEventos.getCalificacion().getText());
            double precio = Double.parseDouble(panelDatosEventos.getPrecio().getText());
            int ticketsDisponibles = Integer.parseInt(panelDatosEventos.getTxtTickets().getText());

            eventoActual.setTitulo(titulo);
            eventoActual.setTipo(tipo);
            eventoActual.setDireccion(direccion);
            eventoActual.setFecha(fecha);
            eventoActual.setCalificacion(calificacion);
            eventoActual.setPrecio(precio);
            eventoActual.setMaxEntradas(ticketsDisponibles);

            // 🟢 Usamos directamente el índice
            gestor.setDatosEventoComprar(eventos.get(indiceEventoActual));
            gestor.setIndiceEvento(indiceEventoActual); // por si lo usas en Compra

            System.out.println("Evento guardado bien");
            PaginaCompra datosCompra = new PaginaCompra(gestor, paginaBase);
            this.setVisible(false);
            datosCompra.setVisible(true);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Formato numérico incorrecto en calificación, precio o tickets.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "Formato de fecha incorrecto. Usa: yyyy-MM-dd HH:mm", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al guardar el evento: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void siguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteActionPerformed
        // TODO add your handling code here:
        if (indiceEventoActual < eventos.size() - 1) {
            indiceEventoActual++;
            eventoActual = eventos.get(indiceEventoActual);
            panelDatosEventos.mostrarEvento(eventoActual);
        } else {
        JOptionPane.showMessageDialog(this, "Ya estás en el ultimo evento.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_siguienteActionPerformed

    private void anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorActionPerformed
        // TODO add your handling code here:
        if (indiceEventoActual > 0) {
            indiceEventoActual--;
            eventoActual = eventos.get(indiceEventoActual);
            panelDatosEventos.mostrarEvento(eventoActual);
        } else {
        JOptionPane.showMessageDialog(this, "Ya estás en el primer evento.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_anteriorActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        paginaBase.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String ciudadFiltro = txtCiudad.getText().trim().toLowerCase();
        String tipoFiltro = comboTipo.getSelectedItem().toString();
        listaEventosFiltrados = new ArrayList();


        for (Evento e : gestor.getListaEventos()) {
            boolean coincideCiudad = ciudadFiltro.isEmpty() || e.getDireccion().getCiudad().toLowerCase().contains(ciudadFiltro);
            boolean coincideTipo = tipoFiltro.equals("Todos") || e.getTipo().equals(tipoFiltro);

            if (coincideCiudad && coincideTipo) {
                listaEventosFiltrados.add(e);
            }
        }
        indiceEventoActual = 0;
        if (!listaEventosFiltrados.isEmpty()) {
        panelDatosEventos.mostrarEvento(listaEventosFiltrados.get(indiceEventoActual));
    } else {
           JOptionPane.showMessageDialog(this, "No hay eventos con este filtro", "Aviso", JOptionPane.INFORMATION_MESSAGE); 
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void anteriorConFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorConFiltroActionPerformed
        // TODO add your handling code here:
        if (indiceEventoActual > 0) {
            indiceEventoActual--;
            eventoActual = listaEventosFiltrados.get(indiceEventoActual);
            panelDatosEventos.mostrarEvento(eventoActual);
        } else {
        JOptionPane.showMessageDialog(this, "No hay mas eventos con estos filtros. ", "Aviso", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_anteriorConFiltroActionPerformed

    private void siguienteConFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteConFiltroActionPerformed
        // TODO add your handling code here:
        if (indiceEventoActual < listaEventosFiltrados.size() - 1) {
            indiceEventoActual++;
            eventoActual = listaEventosFiltrados.get(indiceEventoActual);
            panelDatosEventos.mostrarEvento(eventoActual);
        } else {
        JOptionPane.showMessageDialog(this, "No hay mas eventos con estos filtros. ", "Aviso", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_siguienteConFiltroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Eventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Eventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Eventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Eventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Eventos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anterior;
    private javax.swing.JToggleButton anteriorConFiltro;
    private javax.swing.JComboBox<String> comboTipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private InterfazVisual.PanelDatosEventos panelDatosEventos;
    private InterfazVisual.PanelDatosEventos panelDatosEventos1;
    private javax.swing.JButton siguiente;
    private javax.swing.JToggleButton siguienteConFiltro;
    private javax.swing.JTextField txtCiudad;
    // End of variables declaration//GEN-END:variables
}
